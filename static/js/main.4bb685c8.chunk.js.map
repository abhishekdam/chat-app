{"version":3,"sources":["components/Chat.js","firebase.js","components/SidebarChat.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Chat","useState","seed","setSeed","input","setInput","useEffect","Math","floor","random","className","Avatar","src","IconButton","SearchOutlined","AttachFile","MoreVert","value","onChange","e","target","type","placeholder","onClick","preventDefault","console","log","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","GoogleAuthProvider","SidebarChat","id","name","addNewChat","roomName","prompt","collection","add","Sidebar","rooms","setRooms","unsubscribe","onSnapshot","snapshot","docs","map","doc","data","DonutLarge","room","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bb685c8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\nimport { AttachFile, SearchOutlined, MoreVert } from \"@material-ui/icons\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    console.log(\"You Typed >>>\", input);\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"chat\">\n      {/* Chat header containg the info about the reaciver last seen and etc */}\n      <div className=\"chat_header\">\n        <Avatar\n          src={`https://avatars.dicebear.com/api/human/${seed}.svg`}></Avatar>\n        <div className=\"chat_headerInfo\">\n          <h3>Room Name</h3>\n          <p>Last seen at...</p>\n        </div>\n        <div className=\"chat_headerRight\">\n          <IconButton>\n            <SearchOutlined></SearchOutlined>\n          </IconButton>\n          <IconButton>\n            <AttachFile></AttachFile>\n          </IconButton>\n          <IconButton>\n            <MoreVert></MoreVert>\n          </IconButton>\n        </div>\n      </div>\n      {/* all the chats */}\n      <div className=\"chat_body\">\n        <p className={`chat_message ${true && \"chat_reciever\"}`}>\n          <span className=\"chat_name\">Aakash Chahal</span>\n          Hey guys\n          <span className=\"chat_timestamp\">10:30 pm</span>\n        </p>\n      </div>\n      {/* the chat footer containing the text box and the send button */}\n      <div className=\"chat_footer\">\n        <InsertEmoticonIcon></InsertEmoticonIcon>\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            type=\"text\"\n            placeholder=\"Type a message\"\n          />\n          <button type=\"submit\" onClick={sendMessage}>\n            Send a message\n          </button>\n        </form>\n        <MicIcon></MicIcon>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAWVPkSN6z3UA3FJURUPfQWkfXkcSFPGQ0\",\n  authDomain: \"chat-app-6e25d.firebaseapp.com\",\n  projectId: \"chat-app-6e25d\",\n  storageBucket: \"chat-app-6e25d.appspot.com\",\n  messagingSenderId: \"553167708605\",\n  appId: \"1:553167708605:web:5805321866e108772af2d4\",\n  measurementId: \"G-NT8FP9Y6VD\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst provide = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provide };\nexport default db;\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./SidebarChat.css\";\nimport db from \"../firebase\";\n\nfunction SidebarChat({ id, name, addNewChat }) {\n  const [seed, setSeed] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for the chat room\");\n    if (roomName) {\n      //adding new rooms from the UI only\n      db.collection(\"rooms\").add({\n        name: roomName,\n      });\n    }\n  };\n\n  return !addNewChat ? (\n    <div className=\"sidebarChat\">\n      <Avatar\n        src={`https://avatars.dicebear.com/api/human/${seed}.svg`}></Avatar>\n      <div className=\"sidebarChat_info\">\n        <h2>{name}</h2>\n        <p>Last Message...</p>\n      </div>\n    </div>\n  ) : (\n    <div className=\"sidebarChat\" onClick={createChat}>\n      <h2>Add new chat</h2>\n    </div>\n  );\n}\n\nexport default SidebarChat;\n","import React, { useState, useEffect } from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport \"./Sidebar.css\";\nimport SidebarChat from \"./SidebarChat\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { DonutLarge, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport db from \"../firebase\";\n\nfunction Sidebar() {\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\n      setRooms(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    //   This whole thing is a side-bar line up :\n    <div className=\"sidebar\">\n      {/* Header of the sidebar */}\n      <div className=\"sidebar_header\">\n        {/* Account Avatar */}\n        <Avatar></Avatar>\n        <div className=\"sidebar_headerRight\">\n          <IconButton>\n            {/* Status Btn */}\n            <DonutLarge></DonutLarge>\n          </IconButton>\n          <IconButton>\n            {/* New chat btn */}\n            <ChatIcon></ChatIcon>\n          </IconButton>\n          <IconButton>\n            {/* More option btn */}\n            <MoreVert></MoreVert>\n          </IconButton>\n        </div>\n      </div>\n      {/* Search box in sidebar */}\n      <div className=\"sidebar_search\">\n        <div className=\"sidebar_searchContainer\">\n          <SearchOutlined></SearchOutlined>\n          <input type=\"text\" placeholder=\"Search or start new chat\" />\n        </div>\n      </div>\n      {/* sidebar chat list */}\n      <div className=\"sidebar_chats\">\n        <SidebarChat addNewChat></SidebarChat>\n        {rooms.map((room) => (\n          <SidebarChat\n            key={room.id}\n            id={room.id}\n            name={room.data.name}></SidebarChat>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Sidebar from \"./components/Sidebar\";\n\nfunction App() {\n  return (\n    // BEM naming convention (Block Element Modifier methedology)\n    <div className=\"App\">\n      {/* Floating App body */}\n      <div className=\"app_body\">\n        {/* Sidebar */}\n        <Sidebar></Sidebar>\n        {/* Chat */}\n        <Chat></Chat>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}