{"version":3,"sources":["components/Chat.js","components/SidebarChat.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Chat","useState","seed","setSeed","useEffect","Math","floor","random","className","Avatar","src","IconButton","SearchOutlined","AttachFile","MoreVert","SidebarChat","addNewChat","onClick","prompt","Sidebar","DonutLarge","type","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAgDeA,MA3Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WACRD,EAAQE,KAAKC,MAAsB,IAAhBD,KAAKE,aACvB,IAGD,sBAAKC,UAAU,OAAf,UAEE,sBAAKA,UAAU,cAAf,UACE,cAACC,EAAA,EAAD,CACEC,IAAG,iDAA4CR,EAA5C,UACL,sBAAKM,UAAU,kBAAf,UACE,2CACA,mDAEF,sBAAKA,UAAU,mBAAf,UACE,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACD,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,MAEF,cAACF,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,YAKN,qBAAKN,UAAU,YAAf,SACE,oBAAGA,UAAS,uBAA0B,iBAAtC,UACE,sBAAMA,UAAU,YAAhB,2BADF,WAGE,sBAAMA,UAAU,iBAAhB,2BAIJ,qBAAKA,UAAU,oB,YCXNO,MA5Bf,YAAsC,IAAfC,EAAc,EAAdA,WACrB,EAAwBf,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,qBAAU,WACRD,EAAQE,KAAKC,MAAsB,IAAhBD,KAAKE,aACvB,IAOKS,EAUN,qBAAKR,UAAU,cAAcS,QAhBZ,WACAC,OAAO,mCAexB,SACE,gDAVF,sBAAKV,UAAU,cAAf,UACE,cAACC,EAAA,EAAD,CACEC,IAAG,iDAA4CR,EAA5C,UACL,sBAAKM,UAAU,mBAAf,UACE,2CACA,uD,yBC0BOW,MAzCf,WACE,OAEE,cADA,CACA,OAAKX,UAAU,UAAf,UAEE,sBAAKA,UAAU,iBAAf,UAEE,cAACC,EAAA,EAAD,IACA,sBAAKD,UAAU,sBAAf,UACE,cAACG,EAAA,EAAD,UAEE,cAACS,EAAA,EAAD,MAEF,cAACT,EAAA,EAAD,UAEE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UAEE,cAACG,EAAA,EAAD,YAKN,qBAAKN,UAAU,iBAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,cAACI,EAAA,EAAD,IACA,uBAAOS,KAAK,OAAOC,YAAY,kCAInC,sBAAKd,UAAU,gBAAf,UACE,cAAC,EAAD,CAAaQ,YAAU,IACvB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCvBOO,MAff,WACE,OAEE,aADA,CACA,OAAKf,UAAU,MAAf,SAEE,sBAAKA,UAAU,WAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,UCDOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cb2c49b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\nimport { AttachFile, SearchOutlined, MoreVert } from \"@material-ui/icons\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  return (\n    <div className=\"chat\">\n      {/* Chat header containg the info about the reaciver last seen and etc */}\n      <div className=\"chat_header\">\n        <Avatar\n          src={`https://avatars.dicebear.com/api/human/${seed}.svg`}></Avatar>\n        <div className=\"chat_headerInfo\">\n          <h3>Room Name</h3>\n          <p>Last seen at...</p>\n        </div>\n        <div className=\"chat_headerRight\">\n          <IconButton>\n            <SearchOutlined></SearchOutlined>\n          </IconButton>\n          <IconButton>\n            <AttachFile></AttachFile>\n          </IconButton>\n          <IconButton>\n            <MoreVert></MoreVert>\n          </IconButton>\n        </div>\n      </div>\n      {/* all the chats */}\n      <div className=\"chat_body\">\n        <p className={`chat_message ${true && \"chat_reciever\"}`}>\n          <span className=\"chat_name\">Aakash Chahal</span>\n          Hey guys\n          <span className=\"chat_timestamp\">10:30 pm</span>\n        </p>\n      </div>\n      {/* the chat footer containing the text box and the send button */}\n      <div className=\"chat_footer\"></div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React, { useEffect, useState } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./SidebarChat.css\";\n\nfunction SidebarChat({ addNewChat }) {\n  const [seed, setSeed] = useState(\"\");\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for the chat\");\n    if (roomName) {\n      // do some clever data base stuff\n    }\n  };\n  return !addNewChat ? (\n    <div className=\"sidebarChat\">\n      <Avatar\n        src={`https://avatars.dicebear.com/api/human/${seed}.svg`}></Avatar>\n      <div className=\"sidebarChat_info\">\n        <h2>Room Name</h2>\n        <p>Last Message...</p>\n      </div>\n    </div>\n  ) : (\n    <div className=\"sidebarChat\" onClick={createChat}>\n      <h2>Add new chat</h2>\n    </div>\n  );\n}\n\nexport default SidebarChat;\n","import React from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport \"./Sidebar.css\";\nimport SidebarChat from \"./SidebarChat\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport { DonutLarge, MoreVert, SearchOutlined } from \"@material-ui/icons\";\n\nfunction Sidebar() {\n  return (\n    //   This whole thing is a side-bar line up :\n    <div className=\"sidebar\">\n      {/* Header of the sidebar */}\n      <div className=\"sidebar_header\">\n        {/* Account Avatar */}\n        <Avatar></Avatar>\n        <div className=\"sidebar_headerRight\">\n          <IconButton>\n            {/* Status Btn */}\n            <DonutLarge></DonutLarge>\n          </IconButton>\n          <IconButton>\n            {/* New chat btn */}\n            <ChatIcon></ChatIcon>\n          </IconButton>\n          <IconButton>\n            {/* More option btn */}\n            <MoreVert></MoreVert>\n          </IconButton>\n        </div>\n      </div>\n      {/* Search box in sidebar */}\n      <div className=\"sidebar_search\">\n        <div className=\"sidebar_searchContainer\">\n          <SearchOutlined></SearchOutlined>\n          <input type=\"text\" placeholder=\"Search or start new chat\" />\n        </div>\n      </div>\n      {/* sidebar chat list */}\n      <div className=\"sidebar_chats\">\n        <SidebarChat addNewChat></SidebarChat>\n        <SidebarChat></SidebarChat>\n        <SidebarChat></SidebarChat>\n        <SidebarChat></SidebarChat>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport Sidebar from \"./components/Sidebar\";\n\nfunction App() {\n  return (\n    // BEM naming convention (Block Element Modifier methedology)\n    <div className=\"App\">\n      {/* Floating App body */}\n      <div className=\"app_body\">\n        {/* Sidebar */}\n        <Sidebar></Sidebar>\n        {/* Chat */}\n        <Chat></Chat>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}